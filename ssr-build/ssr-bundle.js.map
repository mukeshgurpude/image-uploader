{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./components/loader/style.css?46a3","webpack:///../node_modules/cross-fetch/dist/browser-ponyfill.js","webpack:///./components/success/style.css?f842","webpack:///../node_modules/es5-ext/global.js","webpack:///../node_modules/websocket/lib/version.js","webpack:///./components/wrapper/index.js","webpack:///../../../src/lib/version.ts","webpack:///../../../src/lib/constants.ts","webpack:///../../../src/lib/helpers.ts","webpack:///../../../src/lib/fetch.ts","webpack:///../../../src/lib/cookies.ts","webpack:///../../src/GoTrueApi.ts","webpack:///../../../src/lib/polyfills.ts","webpack:///../../src/GoTrueClient.ts","webpack:///../../../src/lib/SupabaseAuthClient.ts","webpack:///../../../src/lib/types.ts","webpack:///../../../src/lib/PostgrestFilterBuilder.ts","webpack:///../../../src/lib/PostgrestTransformBuilder.ts","webpack:///../../../src/lib/PostgrestQueryBuilder.ts","webpack:///../../../src/lib/PostgrestRpcBuilder.ts","webpack:///../../../src/lib/transformers.ts","webpack:///../../src/PostgrestClient.ts","webpack:///../../../src/lib/timer.ts","webpack:///../../../src/lib/push.ts","webpack:///../../src/RealtimeSubscription.ts","webpack:///../../../src/lib/serializer.ts","webpack:///../../src/RealtimeClient.ts","webpack:///../../../src/lib/SupabaseRealtimeClient.ts","webpack:///../../../src/lib/SupabaseQueryBuilder.ts","webpack:///../../../src/lib/StorageFileApi.ts","webpack:///../../src/SupabaseStorageClient.ts","webpack:///../../../src/lib/StorageBucketApi.ts","webpack:///../../src/SupabaseClient.ts","webpack:///./api/image.js","webpack:///../../src/index.ts","webpack:///./components/uploader/index.js","webpack:///../node_modules/websocket/lib/browser.js","webpack:///external \"preact\"","webpack:///./assets/image.svg","webpack:///../src/index.js","webpack:///./components/app.js","webpack:///./index.js","webpack:///./components/loader/index.js","webpack:///./components/uploader/style.css?a747","webpack:///./components/success/index.js","webpack:///./components/wrapper/style.css?501f"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","global","self","this","__self__","F","fetch","DOMException","support","Blob","e","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","toString","normalizeName","String","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","map","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","type","rejected","Error","arrayBuffer","then","text","readAsText","chars","length","fromCharCode","join","readArrayBufferAsText","formData","decode","json","JSON","parse","oldValue","has","callback","thisArg","keys","push","values","entries","methods","Request","input","options","method","upcased","url","credentials","signal","toUpperCase","referrer","form","trim","split","bytes","replace","decodeURIComponent","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","err","message","stack","constructor","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","ponyfill","ctx","default","naiveFallback","window","globalThis","configurable","__global__","require","version","Wrapper","children","props","element","cloneElement","className","style","card","expiresIn","PostgresTypes","Timer","supabase","process","upload","image","storage","from","Date","getTime","returning","get_url","path","getPublicUrl","publicURL","Uploader","dispatch","div","useRef","dropHandler","ev","preventDefault","stopPropagation","file_to_upload","dataTransfer","files","target","res","data","Key","ref","id","file","onDragOver","onDrop","src","alt","accept","onChange","_globalThis","NativeWebSocket","WebSocket","MozWebSocket","websocket_version","W3CWebSocket","uri","protocols","prop","currentIndex","currentComponent","prevRaf","currentHook","afterPaintEffects","oldBeforeDiff","oldBeforeRender","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","getHookState","index","hooks","useState","initialState","useReducer","invokeOrReturn","reducer","hookState","_reducer","nextValue","action","setState","useEffect","args","state","argsChanged","initialValue","useMemo","current","factory","flushAfterPaintEffects","component","invokeCleanup","invokeEffect","vnode","requestAnimationFrame","raf","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","setTimeout","commitQueue","some","filter","cb","hasErrored","hook","comp","cleanup","oldArgs","newArgs","arg","f","pos","img","URL","createObjectURL","App","Loader","outer","inner","Success","copied","setCopied","checkmark","copy_box","onClick","navigator","clipboard","writeText","button"],"mappings":"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","file":"ssr-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"QfWi\");\n","// extracted by mini-css-extract-plugin\nexport default {\"outer\":\"outer__mFZEY\",\"inner\":\"inner__MBM5r\",\"traverse\":\"traverse__RroJw\"};","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","// extracted by mini-css-extract-plugin\nexport default {\"checkmark\":\"checkmark__DW+Zk\",\"img\":\"img__xrfRn\",\"copy_box\":\"copy_box__GGwpA\",\"button\":\"button__Di9dm\",\"copied\":\"copied__XRZgO\"};","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","module.exports = require('../package.json').version;\n","import { cloneElement } from 'preact';\nimport style from './style.css';\n\nexport default function Wrapper({children, ...props}) {\n  const element = cloneElement(children, props);\n  return <div className={style.card} children={element} />\n}\n","// generated by genversion\nexport const version = '0.0.0';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${version}` };\n//# sourceMappingURL=constants.js.map","export function expiresAt(expiresIn) {\n    const timeNow = Math.round(Date.now() / 1000);\n    return timeNow + expiresIn;\n}\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport const isBrowser = () => typeof window !== 'undefined';\nexport function getParameterByName(name, url) {\n    var _a;\n    if (!url)\n        url = ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.href) || '';\n    // eslint-disable-next-line no-useless-escape\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    const regex = new RegExp('[?&#]' + name + '(=([^&#]*)|&|#|$)'), results = regex.exec(url);\n    if (!results)\n        return null;\n    if (!results[2])\n        return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n//# sourceMappingURL=helpers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport crossFetch from 'cross-fetch';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => {\n    if (typeof error.json !== 'function') {\n        return reject(error);\n    }\n    error.json().then((err) => {\n        return reject({\n            message: _getErrorMessage(err),\n            status: (error === null || error === void 0 ? void 0 : error.status) || 500,\n        });\n    });\n};\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nfunction _handleRequest(fetcher = crossFetch, method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return resolve(result);\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function get(fetcher, url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'GET', url, options, parameters);\n    });\n}\nexport function post(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'POST', url, options, parameters, body);\n    });\n}\nexport function put(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'PUT', url, options, parameters, body);\n    });\n}\nexport function remove(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'DELETE', url, options, parameters, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map","/**\n * Serialize data into a cookie header.\n */\nfunction serialize(name, val, options) {\n    const opt = options || {};\n    const enc = encodeURIComponent;\n    /* eslint-disable-next-line no-control-regex */\n    const fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n    if (typeof enc !== 'function') {\n        throw new TypeError('option encode is invalid');\n    }\n    if (!fieldContentRegExp.test(name)) {\n        throw new TypeError('argument name is invalid');\n    }\n    const value = enc(val);\n    if (value && !fieldContentRegExp.test(value)) {\n        throw new TypeError('argument val is invalid');\n    }\n    let str = name + '=' + value;\n    if (null != opt.maxAge) {\n        const maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge) || !isFinite(maxAge)) {\n            throw new TypeError('option maxAge is invalid');\n        }\n        str += '; Max-Age=' + Math.floor(maxAge);\n    }\n    if (opt.domain) {\n        if (!fieldContentRegExp.test(opt.domain)) {\n            throw new TypeError('option domain is invalid');\n        }\n        str += '; Domain=' + opt.domain;\n    }\n    if (opt.path) {\n        if (!fieldContentRegExp.test(opt.path)) {\n            throw new TypeError('option path is invalid');\n        }\n        str += '; Path=' + opt.path;\n    }\n    if (opt.expires) {\n        if (typeof opt.expires.toUTCString !== 'function') {\n            throw new TypeError('option expires is invalid');\n        }\n        str += '; Expires=' + opt.expires.toUTCString();\n    }\n    if (opt.httpOnly) {\n        str += '; HttpOnly';\n    }\n    if (opt.secure) {\n        str += '; Secure';\n    }\n    if (opt.sameSite) {\n        const sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n        switch (sameSite) {\n            case 'lax':\n                str += '; SameSite=Lax';\n                break;\n            case 'strict':\n                str += '; SameSite=Strict';\n                break;\n            case 'none':\n                str += '; SameSite=None';\n                break;\n            default:\n                throw new TypeError('option sameSite is invalid');\n        }\n    }\n    return str;\n}\n/**\n * Based on the environment and the request we know if a secure cookie can be set.\n */\nfunction isSecureEnvironment(req) {\n    if (!req || !req.headers || !req.headers.host) {\n        throw new Error('The \"host\" request header is not available');\n    }\n    const host = (req.headers.host.indexOf(':') > -1 && req.headers.host.split(':')[0]) || req.headers.host;\n    if (['localhost', '127.0.0.1'].indexOf(host) > -1 || host.endsWith('.local')) {\n        return false;\n    }\n    return true;\n}\n/**\n * Serialize a cookie to a string.\n */\nfunction serializeCookie(cookie, secure) {\n    var _a, _b, _c;\n    return serialize(cookie.name, cookie.value, {\n        maxAge: cookie.maxAge,\n        expires: new Date(Date.now() + cookie.maxAge * 1000),\n        httpOnly: true,\n        secure,\n        path: (_a = cookie.path) !== null && _a !== void 0 ? _a : '/',\n        domain: (_b = cookie.domain) !== null && _b !== void 0 ? _b : '',\n        sameSite: (_c = cookie.sameSite) !== null && _c !== void 0 ? _c : 'lax',\n    });\n}\n/**\n * Set one or more cookies.\n */\nexport function setCookies(req, res, cookies) {\n    const strCookies = cookies.map((c) => serializeCookie(c, isSecureEnvironment(req)));\n    const previousCookies = res.getHeader('Set-Cookie');\n    if (previousCookies) {\n        if (previousCookies instanceof Array) {\n            Array.prototype.push.apply(strCookies, previousCookies);\n        }\n        else if (typeof previousCookies === 'string') {\n            strCookies.push(previousCookies);\n        }\n    }\n    res.setHeader('Set-Cookie', strCookies);\n}\n/**\n * Set one or more cookies.\n */\nexport function setCookie(req, res, cookie) {\n    setCookies(req, res, [cookie]);\n}\nexport function deleteCookie(req, res, name) {\n    setCookie(req, res, {\n        name,\n        value: '',\n        maxAge: -1,\n    });\n}\n//# sourceMappingURL=cookies.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { get, post, put, remove } from './lib/fetch';\nimport { COOKIE_OPTIONS } from './lib/constants';\nimport { setCookie, deleteCookie } from './lib/cookies';\nimport { expiresAt } from './lib/helpers';\nexport default class GoTrueApi {\n    constructor({ url = '', headers = {}, cookieOptions, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.cookieOptions = Object.assign(Object.assign({}, COOKIE_OPTIONS), cookieOptions);\n        this.fetch = fetch;\n    }\n    /**\n     * Create a temporary object with all configured headers and\n     * adds the Authorization token to be used on request methods\n     * @param jwt A valid, logged-in JWT.\n     */\n    _createRequestHeaders(jwt) {\n        const headers = Object.assign({}, this.headers);\n        headers['Authorization'] = `Bearer ${jwt}`;\n        return headers;\n    }\n    cookieName() {\n        var _a;\n        return (_a = this.cookieOptions.name) !== null && _a !== void 0 ? _a : '';\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param provider One of the providers supported by GoTrue.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param scopes A space-separated list of scopes granted to the OAuth application.\n     */\n    getUrlForProvider(provider, options) {\n        const urlParams = [`provider=${encodeURIComponent(provider)}`];\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n        }\n        if (options === null || options === void 0 ? void 0 : options.scopes) {\n            urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n        }\n        return `${this.url}/authorize?${urlParams.join('&')}`;\n    }\n    /**\n     * Creates a new user using their email address.\n     * @param email The email address of the user.\n     * @param password The password of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param data Optional user metadata.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n    signUpWithEmail(email, password, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString = '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/signup${queryString}`, {\n                    email,\n                    password,\n                    data: options.data,\n                    gotrue_meta_security: { hcaptcha_token: options.captchaToken },\n                }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Logs in an existing user using their email address.\n     * @param email The email address of the user.\n     * @param password The password of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    signInWithEmail(email, password, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '?grant_type=password';\n                if (options.redirectTo) {\n                    queryString += '&redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/token${queryString}`, { email, password }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Signs up a new user using their phone number and a password.\n     * @param phone The phone number of the user.\n     * @param password The password of the user.\n     * @param data Optional user metadata.\n     */\n    signUpWithPhone(phone, password, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/signup`, {\n                    phone,\n                    password,\n                    data: options.data,\n                    gotrue_meta_security: { hcaptcha_token: options.captchaToken },\n                }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Logs in an existing user using their phone number and password.\n     * @param phone The phone number of the user.\n     * @param password The password of the user.\n     */\n    signInWithPhone(phone, password) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const queryString = '?grant_type=password';\n                const data = yield post(this.fetch, `${this.url}/token${queryString}`, { phone, password }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends a magic login link to an email address.\n     * @param email The email address of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    sendMagicLinkEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/magiclink${queryString}`, { email, gotrue_meta_security: { hcaptcha_token: options.captchaToken } }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends a mobile OTP via SMS. Will register the account if it doesn't already exist\n     * @param phone The user's phone number WITH international prefix\n     */\n    sendMobileOTP(phone, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/otp`, { phone, gotrue_meta_security: { hcaptcha_token: options.captchaToken } }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     */\n    signOut(jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield post(this.fetch, `${this.url}/logout`, {}, { headers: this._createRequestHeaders(jwt), noResolveJson: true });\n                return { error: null };\n            }\n            catch (e) {\n                return { error: e };\n            }\n        });\n    }\n    /**\n     * Send User supplied Mobile OTP to be verified\n     * @param phone The user's phone number WITH international prefix\n     * @param token token that user was sent to their mobile phone\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    verifyMobileOTP(phone, token, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/verify`, { phone, token, type: 'sms', redirect_to: options.redirectTo }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param data Optional user metadata\n     */\n    inviteUserByEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/invite${queryString}`, { email, data: options.data }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends a reset request to an email address.\n     * @param email The email address of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    resetPasswordForEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/recover${queryString}`, { email, gotrue_meta_security: { hcaptcha_token: options.captchaToken } }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n    refreshAccessToken(refreshToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/token?grant_type=refresh_token`, { refresh_token: refreshToken }, { headers: this.headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Set/delete the auth cookie based on the AuthChangeEvent.\n     * Works for Next.js & Express (requires cookie-parser middleware).\n     */\n    setAuthCookie(req, res) {\n        var _a;\n        if (req.method !== 'POST') {\n            res.setHeader('Allow', 'POST');\n            res.status(405).end('Method Not Allowed');\n        }\n        const { event, session } = req.body;\n        if (!event)\n            throw new Error('Auth event missing!');\n        if (event === 'SIGNED_IN') {\n            if (!session)\n                throw new Error('Auth session missing!');\n            setCookie(req, res, {\n                name: this.cookieName(),\n                value: session.access_token,\n                domain: this.cookieOptions.domain,\n                maxAge: (_a = this.cookieOptions.lifetime) !== null && _a !== void 0 ? _a : 0,\n                path: this.cookieOptions.path,\n                sameSite: this.cookieOptions.sameSite,\n            });\n        }\n        if (event === 'SIGNED_OUT')\n            deleteCookie(req, res, this.cookieName());\n        res.status(200).json({});\n    }\n    /**\n     * Generates links to be sent via email or other.\n     * @param type The link type (\"signup\" or \"magiclink\" or \"recovery\" or \"invite\").\n     * @param email The user's email.\n     * @param password User password. For signup only.\n     * @param data Optional user metadata. For signup only.\n     * @param redirectTo The link type (\"signup\" or \"magiclink\" or \"recovery\" or \"invite\").\n     */\n    generateLink(type, email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/admin/generate_link`, {\n                    type,\n                    email,\n                    password: options.password,\n                    data: options.data,\n                    redirect_to: options.redirectTo,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     *\n     * @param attributes The data you want to create the user with.\n     */\n    createUser(attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/admin/users`, attributes, {\n                    headers: this.headers,\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    listUsers() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/admin/users`, {\n                    headers: this.headers,\n                });\n                return { data: data.users, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    getUserById(uid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/admin/users/${uid}`, {\n                    headers: this.headers,\n                });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Get user by reading the cookie from the request.\n     * Works for Next.js & Express (requires cookie-parser middleware).\n     */\n    getUserByCookie(req) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!req.cookies) {\n                    throw new Error('Not able to parse cookies! When using Express make sure the cookie-parser middleware is in use!');\n                }\n                const token = req.cookies[this.cookieName()];\n                if (!token) {\n                    throw new Error('No cookie found!');\n                }\n                const { user, error } = yield this.getUser(token);\n                if (error)\n                    throw error;\n                return { token, user, data: user, error: null };\n            }\n            catch (e) {\n                return { token: null, user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    updateUserById(uid, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this; //\n                const data = yield put(this.fetch, `${this.url}/admin/users/${uid}`, attributes, {\n                    headers: this.headers,\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     *\n     * @param uid The user uid you want to remove.\n     */\n    deleteUser(uid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/admin/users/${uid}`, {}, {\n                    headers: this.headers,\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Gets the current user details.\n     *\n     * This method is called by the GoTrueClient `update` where\n     * the jwt is set to this.currentSession.access_token\n     * and therefore, acts like getting the currently authenticated used\n     *\n     * @param jwt A valid, logged-in JWT. Typically, the access_token for the currentSession\n     */\n    getUser(jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/user`, {\n                    headers: this._createRequestHeaders(jwt),\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Updates the user data.\n     * @param jwt A valid, logged-in JWT.\n     * @param attributes The data you want to update.\n     */\n    updateUser(jwt, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(this.fetch, `${this.url}/user`, attributes, {\n                    headers: this._createRequestHeaders(jwt),\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n}\n//# sourceMappingURL=GoTrueApi.js.map","/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n    if (typeof globalThis === 'object')\n        return;\n    try {\n        Object.defineProperty(Object.prototype, '__magic__', {\n            get: function () {\n                return this;\n            },\n            configurable: true,\n        });\n        // @ts-expect-error 'Allow access to magic'\n        __magic__.globalThis = __magic__;\n        // @ts-expect-error 'Allow access to magic'\n        delete Object.prototype.__magic__;\n    }\n    catch (e) {\n        if (typeof self !== 'undefined') {\n            // @ts-expect-error 'Allow access to globals'\n            self.globalThis = self;\n        }\n    }\n}\n//# sourceMappingURL=polyfills.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport GoTrueApi from './GoTrueApi';\nimport { isBrowser, getParameterByName, uuid } from './lib/helpers';\nimport { GOTRUE_URL, DEFAULT_HEADERS, STORAGE_KEY } from './lib/constants';\nimport { polyfillGlobalThis } from './lib/polyfills';\npolyfillGlobalThis(); // Make \"globalThis\" available\nconst DEFAULT_OPTIONS = {\n    url: GOTRUE_URL,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    multiTab: true,\n    headers: DEFAULT_HEADERS,\n};\nexport default class GoTrueClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param options.url The URL of the GoTrue server.\n     * @param options.headers Any additional headers to send to the GoTrue server.\n     * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.localStorage Provide your own local storage implementation to use instead of the browser's local storage.\n     * @param options.multiTab Set to \"false\" if you want to disable multi-tab/window events.\n     * @param options.cookieOptions\n     * @param options.fetch A custom fetch implementation.\n     */\n    constructor(options) {\n        this.stateChangeEmitters = new Map();\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.currentUser = null;\n        this.currentSession = null;\n        this.autoRefreshToken = settings.autoRefreshToken;\n        this.persistSession = settings.persistSession;\n        this.multiTab = settings.multiTab;\n        this.localStorage = settings.localStorage || globalThis.localStorage;\n        this.api = new GoTrueApi({\n            url: settings.url,\n            headers: settings.headers,\n            cookieOptions: settings.cookieOptions,\n            fetch: settings.fetch,\n        });\n        this._recoverSession();\n        this._recoverAndRefresh();\n        this._listenForMultiTabEvents();\n        if (settings.detectSessionInUrl && isBrowser() && !!getParameterByName('access_token')) {\n            // Handle the OAuth redirect\n            this.getSessionFromUrl({ storeSession: true }).then(({ error }) => {\n                if (error) {\n                    console.error('Error getting session from URL.', error);\n                }\n            });\n        }\n    }\n    /**\n     * Creates a new user.\n     * @type UserCredentials\n     * @param email The user's email address.\n     * @param password The user's password.\n     * @param phone The user's phone number.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param data Optional user metadata.\n     */\n    signUp({ email, password, phone }, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this._removeSession();\n                const { data, error } = phone && password\n                    ? yield this.api.signUpWithPhone(phone, password, {\n                        data: options.data,\n                        captchaToken: options.captchaToken,\n                    })\n                    : yield this.api.signUpWithEmail(email, password, {\n                        redirectTo: options.redirectTo,\n                        data: options.data,\n                        captchaToken: options.captchaToken,\n                    });\n                if (error) {\n                    throw error;\n                }\n                if (!data) {\n                    throw 'An error occurred on sign up.';\n                }\n                let session = null;\n                let user = null;\n                if (data.access_token) {\n                    session = data;\n                    user = session.user;\n                    this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                if (data.id) {\n                    user = data;\n                }\n                return { user, session, error: null };\n            }\n            catch (e) {\n                return { user: null, session: null, error: e };\n            }\n        });\n    }\n    /**\n     * Log in an existing user, or login via a third-party provider.\n     * @type UserCredentials\n     * @param email The user's email address.\n     * @param password The user's password.\n     * @param refreshToken A valid refresh token that was returned on login.\n     * @param provider One of the providers supported by GoTrue.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param scopes A space-separated list of scopes granted to the OAuth application.\n     */\n    signIn({ email, phone, password, refreshToken, provider }, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this._removeSession();\n                if (email && !password) {\n                    const { error } = yield this.api.sendMagicLinkEmail(email, {\n                        redirectTo: options.redirectTo,\n                        captchaToken: options.captchaToken,\n                    });\n                    return { user: null, session: null, error };\n                }\n                if (email && password) {\n                    return this._handleEmailSignIn(email, password, {\n                        redirectTo: options.redirectTo,\n                    });\n                }\n                if (phone && !password) {\n                    const { error } = yield this.api.sendMobileOTP(phone, {\n                        captchaToken: options.captchaToken,\n                    });\n                    return { user: null, session: null, error };\n                }\n                if (phone && password) {\n                    return this._handlePhoneSignIn(phone, password);\n                }\n                if (refreshToken) {\n                    // currentSession and currentUser will be updated to latest on _callRefreshToken using the passed refreshToken\n                    const { error } = yield this._callRefreshToken(refreshToken);\n                    if (error)\n                        throw error;\n                    return {\n                        user: this.currentUser,\n                        session: this.currentSession,\n                        error: null,\n                    };\n                }\n                if (provider) {\n                    return this._handleProviderSignIn(provider, {\n                        redirectTo: options.redirectTo,\n                        scopes: options.scopes,\n                    });\n                }\n                throw new Error(`You must provide either an email, phone number or a third-party provider.`);\n            }\n            catch (e) {\n                return { user: null, session: null, error: e };\n            }\n        });\n    }\n    /**\n     * Log in a user given a User supplied OTP received via mobile.\n     * @param phone The user's phone number.\n     * @param token The user's password.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    verifyOTP({ phone, token }, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this._removeSession();\n                const { data, error } = yield this.api.verifyMobileOTP(phone, token, options);\n                if (error) {\n                    throw error;\n                }\n                if (!data) {\n                    throw 'An error occurred on token verification.';\n                }\n                let session = null;\n                let user = null;\n                if (data.access_token) {\n                    session = data;\n                    user = session.user;\n                    this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                if (data.id) {\n                    user = data;\n                }\n                return { user, session, error: null };\n            }\n            catch (e) {\n                return { user: null, session: null, error: e };\n            }\n        });\n    }\n    /**\n     * Inside a browser context, `user()` will return the user data, if there is a logged in user.\n     *\n     * For server-side management, you can get a user through `auth.api.getUserByCookie()`\n     */\n    user() {\n        return this.currentUser;\n    }\n    /**\n     * Returns the session data, if there is an active session.\n     */\n    session() {\n        return this.currentSession;\n    }\n    /**\n     * Force refreshes the session including the user data in case it was updated in a different session.\n     */\n    refreshSession() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!((_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token))\n                    throw new Error('Not logged in.');\n                // currentSession and currentUser will be updated to latest on _callRefreshToken\n                const { error } = yield this._callRefreshToken();\n                if (error)\n                    throw error;\n                return { data: this.currentSession, user: this.currentUser, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, error: e };\n            }\n        });\n    }\n    /**\n     * Updates user data, if there is a logged in user.\n     */\n    update(attributes) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!((_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token))\n                    throw new Error('Not logged in.');\n                const { user, error } = yield this.api.updateUser(this.currentSession.access_token, attributes);\n                if (error)\n                    throw error;\n                if (!user)\n                    throw Error('Invalid user data.');\n                const session = Object.assign(Object.assign({}, this.currentSession), { user });\n                this._saveSession(session);\n                this._notifyAllSubscribers('USER_UPDATED');\n                return { data: user, user, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sets the session data from refresh_token and returns current Session and Error\n     * @param refresh_token a JWT token\n     */\n    setSession(refresh_token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!refresh_token) {\n                    throw new Error('No current session.');\n                }\n                const { data, error } = yield this.api.refreshAccessToken(refresh_token);\n                if (error) {\n                    return { session: null, error: error };\n                }\n                this._saveSession(data);\n                this._notifyAllSubscribers('SIGNED_IN');\n                return { session: data, error: null };\n            }\n            catch (e) {\n                return { error: e, session: null };\n            }\n        });\n    }\n    /**\n     * Overrides the JWT on the current client. The JWT will then be sent in all subsequent network requests.\n     * @param access_token a jwt access token\n     */\n    setAuth(access_token) {\n        this.currentSession = Object.assign(Object.assign({}, this.currentSession), { access_token, token_type: 'bearer', user: null });\n        return this.currentSession;\n    }\n    /**\n     * Gets the session data from a URL string\n     * @param options.storeSession Optionally store the session in the browser\n     */\n    getSessionFromUrl(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!isBrowser())\n                    throw new Error('No browser detected.');\n                const error_description = getParameterByName('error_description');\n                if (error_description)\n                    throw new Error(error_description);\n                const provider_token = getParameterByName('provider_token');\n                const access_token = getParameterByName('access_token');\n                if (!access_token)\n                    throw new Error('No access_token detected.');\n                const expires_in = getParameterByName('expires_in');\n                if (!expires_in)\n                    throw new Error('No expires_in detected.');\n                const refresh_token = getParameterByName('refresh_token');\n                if (!refresh_token)\n                    throw new Error('No refresh_token detected.');\n                const token_type = getParameterByName('token_type');\n                if (!token_type)\n                    throw new Error('No token_type detected.');\n                const timeNow = Math.round(Date.now() / 1000);\n                const expires_at = timeNow + parseInt(expires_in);\n                const { user, error } = yield this.api.getUser(access_token);\n                if (error)\n                    throw error;\n                const session = {\n                    provider_token,\n                    access_token,\n                    expires_in: parseInt(expires_in),\n                    expires_at,\n                    refresh_token,\n                    token_type,\n                    user: user,\n                };\n                if (options === null || options === void 0 ? void 0 : options.storeSession) {\n                    this._saveSession(session);\n                    const recoveryMode = getParameterByName('type');\n                    this._notifyAllSubscribers('SIGNED_IN');\n                    if (recoveryMode === 'recovery') {\n                        this._notifyAllSubscribers('PASSWORD_RECOVERY');\n                    }\n                }\n                // Remove tokens from URL\n                window.location.hash = '';\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n     * and log them out - removing all items from localstorage and then trigger a \"SIGNED_OUT\" event.\n     *\n     * For server-side management, you can disable sessions by passing a JWT through to `auth.api.signOut(JWT: string)`\n     */\n    signOut() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessToken = (_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token;\n            this._removeSession();\n            this._notifyAllSubscribers('SIGNED_OUT');\n            if (accessToken) {\n                const { error } = yield this.api.signOut(accessToken);\n                if (error)\n                    return { error };\n            }\n            return { error: null };\n        });\n    }\n    /**\n     * Receive a notification every time an auth event happens.\n     * @returns {Subscription} A subscription object which can be used to unsubscribe itself.\n     */\n    onAuthStateChange(callback) {\n        try {\n            const id = uuid();\n            const subscription = {\n                id,\n                callback,\n                unsubscribe: () => {\n                    this.stateChangeEmitters.delete(id);\n                },\n            };\n            this.stateChangeEmitters.set(id, subscription);\n            return { data: subscription, error: null };\n        }\n        catch (e) {\n            return { data: null, error: e };\n        }\n    }\n    _handleEmailSignIn(email, password, options = {}) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data, error } = yield this.api.signInWithEmail(email, password, {\n                    redirectTo: options.redirectTo,\n                });\n                if (error || !data)\n                    return { data: null, user: null, session: null, error };\n                if (((_a = data === null || data === void 0 ? void 0 : data.user) === null || _a === void 0 ? void 0 : _a.confirmed_at) || ((_b = data === null || data === void 0 ? void 0 : data.user) === null || _b === void 0 ? void 0 : _b.email_confirmed_at)) {\n                    this._saveSession(data);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                return { data, user: data.user, session: data, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, session: null, error: e };\n            }\n        });\n    }\n    _handlePhoneSignIn(phone, password) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data, error } = yield this.api.signInWithPhone(phone, password);\n                if (error || !data)\n                    return { data: null, user: null, session: null, error };\n                if ((_a = data === null || data === void 0 ? void 0 : data.user) === null || _a === void 0 ? void 0 : _a.phone_confirmed_at) {\n                    this._saveSession(data);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                return { data, user: data.user, session: data, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, session: null, error: e };\n            }\n        });\n    }\n    _handleProviderSignIn(provider, options = {}) {\n        const url = this.api.getUrlForProvider(provider, {\n            redirectTo: options.redirectTo,\n            scopes: options.scopes,\n        });\n        try {\n            // try to open on the browser\n            if (isBrowser()) {\n                window.location.href = url;\n            }\n            return { provider, url, data: null, session: null, user: null, error: null };\n        }\n        catch (e) {\n            // fallback to returning the URL\n            if (url)\n                return { provider, url, data: null, session: null, user: null, error: null };\n            return { data: null, user: null, session: null, error: e };\n        }\n    }\n    /**\n     * Attempts to get the session from LocalStorage\n     * Note: this should never be async (even for React Native), as we need it to return immediately in the constructor.\n     */\n    _recoverSession() {\n        var _a;\n        try {\n            const json = isBrowser() && ((_a = this.localStorage) === null || _a === void 0 ? void 0 : _a.getItem(STORAGE_KEY));\n            if (!json || typeof json !== 'string') {\n                return null;\n            }\n            const data = JSON.parse(json);\n            const { currentSession, expiresAt } = data;\n            const timeNow = Math.round(Date.now() / 1000);\n            if (expiresAt >= timeNow && (currentSession === null || currentSession === void 0 ? void 0 : currentSession.user)) {\n                this._saveSession(currentSession);\n                this._notifyAllSubscribers('SIGNED_IN');\n            }\n        }\n        catch (error) {\n            console.log('error', error);\n        }\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n    _recoverAndRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const json = isBrowser() && (yield this.localStorage.getItem(STORAGE_KEY));\n                if (!json) {\n                    return null;\n                }\n                const data = JSON.parse(json);\n                const { currentSession, expiresAt } = data;\n                const timeNow = Math.round(Date.now() / 1000);\n                if (expiresAt < timeNow) {\n                    if (this.autoRefreshToken && currentSession.refresh_token) {\n                        const { error } = yield this._callRefreshToken(currentSession.refresh_token);\n                        if (error) {\n                            console.log(error.message);\n                            yield this._removeSession();\n                        }\n                    }\n                    else {\n                        this._removeSession();\n                    }\n                }\n                else if (!currentSession || !currentSession.user) {\n                    console.log('Current session is missing data.');\n                    this._removeSession();\n                }\n                else {\n                    // should be handled on _recoverSession method already\n                    // But we still need the code here to accommodate for AsyncStorage e.g. in React native\n                    this._saveSession(currentSession);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n            }\n            catch (err) {\n                console.error(err);\n                return null;\n            }\n        });\n    }\n    _callRefreshToken(refresh_token) {\n        var _a;\n        if (refresh_token === void 0) { refresh_token = (_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.refresh_token; }\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!refresh_token) {\n                    throw new Error('No current session.');\n                }\n                const { data, error } = yield this.api.refreshAccessToken(refresh_token);\n                if (error)\n                    throw error;\n                if (!data)\n                    throw Error('Invalid session data.');\n                this._saveSession(data);\n                this._notifyAllSubscribers('TOKEN_REFRESHED');\n                this._notifyAllSubscribers('SIGNED_IN');\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    _notifyAllSubscribers(event) {\n        this.stateChangeEmitters.forEach((x) => x.callback(event, this.currentSession));\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n    _saveSession(session) {\n        this.currentSession = session;\n        this.currentUser = session.user;\n        const expiresAt = session.expires_at;\n        if (expiresAt) {\n            const timeNow = Math.round(Date.now() / 1000);\n            const expiresIn = expiresAt - timeNow;\n            const refreshDurationBeforeExpires = expiresIn > 60 ? 60 : 0.5;\n            this._startAutoRefreshToken((expiresIn - refreshDurationBeforeExpires) * 1000);\n        }\n        // Do we need any extra check before persist session\n        // access_token or user ?\n        if (this.persistSession && session.expires_at) {\n            this._persistSession(this.currentSession);\n        }\n    }\n    _persistSession(currentSession) {\n        const data = { currentSession, expiresAt: currentSession.expires_at };\n        isBrowser() && this.localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n    }\n    _removeSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.currentSession = null;\n            this.currentUser = null;\n            if (this.refreshTokenTimer)\n                clearTimeout(this.refreshTokenTimer);\n            isBrowser() && (yield this.localStorage.removeItem(STORAGE_KEY));\n        });\n    }\n    /**\n     * Clear and re-create refresh token timer\n     * @param value time intervals in milliseconds\n     */\n    _startAutoRefreshToken(value) {\n        if (this.refreshTokenTimer)\n            clearTimeout(this.refreshTokenTimer);\n        if (value <= 0 || !this.autoRefreshToken)\n            return;\n        this.refreshTokenTimer = setTimeout(() => this._callRefreshToken(), value);\n        if (typeof this.refreshTokenTimer.unref === 'function')\n            this.refreshTokenTimer.unref();\n    }\n    /**\n     * Listens for changes to LocalStorage and updates the current session.\n     */\n    _listenForMultiTabEvents() {\n        if (!this.multiTab || !isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            // console.debug('Auth multi-tab support is disabled.')\n            return false;\n        }\n        try {\n            window === null || window === void 0 ? void 0 : window.addEventListener('storage', (e) => {\n                var _a;\n                if (e.key === STORAGE_KEY) {\n                    const newSession = JSON.parse(String(e.newValue));\n                    if ((_a = newSession === null || newSession === void 0 ? void 0 : newSession.currentSession) === null || _a === void 0 ? void 0 : _a.access_token) {\n                        this._recoverAndRefresh();\n                        this._notifyAllSubscribers('SIGNED_IN');\n                    }\n                    else {\n                        this._removeSession();\n                        this._notifyAllSubscribers('SIGNED_OUT');\n                    }\n                }\n            });\n        }\n        catch (error) {\n            console.error('_listenForMultiTabEvents', error);\n        }\n    }\n}\n//# sourceMappingURL=GoTrueClient.js.map","import { GoTrueClient } from '@supabase/gotrue-js';\nexport class SupabaseAuthClient extends GoTrueClient {\n    constructor(options) {\n        super(options);\n    }\n}\n//# sourceMappingURL=SupabaseAuthClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport crossFetch from 'cross-fetch';\nexport class PostgrestBuilder {\n    constructor(builder) {\n        this.shouldThrowOnError = false;\n        Object.assign(this, builder);\n        this.fetch = builder.fetch || crossFetch;\n    }\n    /**\n     * If there's an error with the query, throwOnError will reject the promise by\n     * throwing the error instead of returning it as part of a successful response.\n     *\n     * {@link https://github.com/supabase/supabase-js/issues/92}\n     */\n    throwOnError() {\n        this.shouldThrowOnError = true;\n        return this;\n    }\n    then(onfulfilled, onrejected) {\n        // https://postgrest.org/en/stable/api.html#switching-schemas\n        if (typeof this.schema === 'undefined') {\n            // skip\n        }\n        else if (['GET', 'HEAD'].includes(this.method)) {\n            this.headers['Accept-Profile'] = this.schema;\n        }\n        else {\n            this.headers['Content-Profile'] = this.schema;\n        }\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.headers['Content-Type'] = 'application/json';\n        }\n        let res = this.fetch(this.url.toString(), {\n            method: this.method,\n            headers: this.headers,\n            body: JSON.stringify(this.body),\n            signal: this.signal,\n        }).then((res) => __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            let error = null;\n            let data = null;\n            let count = null;\n            if (res.ok) {\n                const isReturnMinimal = (_a = this.headers['Prefer']) === null || _a === void 0 ? void 0 : _a.split(',').includes('return=minimal');\n                if (this.method !== 'HEAD' && !isReturnMinimal) {\n                    const text = yield res.text();\n                    if (!text) {\n                        // discard `text`\n                    }\n                    else if (this.headers['Accept'] === 'text/csv') {\n                        data = text;\n                    }\n                    else {\n                        data = JSON.parse(text);\n                    }\n                }\n                const countHeader = (_b = this.headers['Prefer']) === null || _b === void 0 ? void 0 : _b.match(/count=(exact|planned|estimated)/);\n                const contentRange = (_c = res.headers.get('content-range')) === null || _c === void 0 ? void 0 : _c.split('/');\n                if (countHeader && contentRange && contentRange.length > 1) {\n                    count = parseInt(contentRange[1]);\n                }\n            }\n            else {\n                const body = yield res.text();\n                try {\n                    error = JSON.parse(body);\n                }\n                catch (_d) {\n                    error = {\n                        message: body,\n                    };\n                }\n                if (error && this.shouldThrowOnError) {\n                    throw error;\n                }\n            }\n            const postgrestResponse = {\n                error,\n                data,\n                count,\n                status: res.status,\n                statusText: res.statusText,\n                body: data,\n            };\n            return postgrestResponse;\n        }));\n        if (!this.shouldThrowOnError) {\n            res = res.catch((fetchError) => ({\n                error: {\n                    message: `FetchError: ${fetchError.message}`,\n                    details: '',\n                    hint: '',\n                    code: fetchError.code || '',\n                },\n                data: null,\n                body: null,\n                count: null,\n                status: 400,\n                statusText: 'Bad Request',\n            }));\n        }\n        return res.then(onfulfilled, onrejected);\n    }\n}\n//# sourceMappingURL=types.js.map","import PostgrestTransformBuilder from './PostgrestTransformBuilder';\nexport default class PostgrestFilterBuilder extends PostgrestTransformBuilder {\n    constructor() {\n        super(...arguments);\n        /** @deprecated Use `contains()` instead. */\n        this.cs = this.contains;\n        /** @deprecated Use `containedBy()` instead. */\n        this.cd = this.containedBy;\n        /** @deprecated Use `rangeLt()` instead. */\n        this.sl = this.rangeLt;\n        /** @deprecated Use `rangeGt()` instead. */\n        this.sr = this.rangeGt;\n        /** @deprecated Use `rangeGte()` instead. */\n        this.nxl = this.rangeGte;\n        /** @deprecated Use `rangeLte()` instead. */\n        this.nxr = this.rangeLte;\n        /** @deprecated Use `rangeAdjacent()` instead. */\n        this.adj = this.rangeAdjacent;\n        /** @deprecated Use `overlaps()` instead. */\n        this.ov = this.overlaps;\n    }\n    /**\n     * Finds all rows which doesn't satisfy the filter.\n     *\n     * @param column  The column to filter on.\n     * @param operator  The operator to filter with.\n     * @param value  The value to filter with.\n     */\n    not(column, operator, value) {\n        this.url.searchParams.append(`${column}`, `not.${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows satisfying at least one of the filters.\n     *\n     * @param filters  The filters to use, separated by commas.\n     * @param foreignTable  The foreign table to use (if `column` is a foreign column).\n     */\n    or(filters, { foreignTable } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'or' : `${foreignTable}.or`;\n        this.url.searchParams.append(key, `(${filters})`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` exactly matches the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    eq(column, value) {\n        this.url.searchParams.append(`${column}`, `eq.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` doesn't match the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    neq(column, value) {\n        this.url.searchParams.append(`${column}`, `neq.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is greater than the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    gt(column, value) {\n        this.url.searchParams.append(`${column}`, `gt.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is greater than or\n     * equal to the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    gte(column, value) {\n        this.url.searchParams.append(`${column}`, `gte.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is less than the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    lt(column, value) {\n        this.url.searchParams.append(`${column}`, `lt.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is less than or equal\n     * to the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    lte(column, value) {\n        this.url.searchParams.append(`${column}`, `lte.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value in the stated `column` matches the supplied\n     * `pattern` (case sensitive).\n     *\n     * @param column  The column to filter on.\n     * @param pattern  The pattern to filter with.\n     */\n    like(column, pattern) {\n        this.url.searchParams.append(`${column}`, `like.${pattern}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value in the stated `column` matches the supplied\n     * `pattern` (case insensitive).\n     *\n     * @param column  The column to filter on.\n     * @param pattern  The pattern to filter with.\n     */\n    ilike(column, pattern) {\n        this.url.searchParams.append(`${column}`, `ilike.${pattern}`);\n        return this;\n    }\n    /**\n     * A check for exact equality (null, true, false), finds all rows whose\n     * value on the stated `column` exactly match the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    is(column, value) {\n        this.url.searchParams.append(`${column}`, `is.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is found on the\n     * specified `values`.\n     *\n     * @param column  The column to filter on.\n     * @param values  The values to filter with.\n     */\n    in(column, values) {\n        const cleanedValues = values\n            .map((s) => {\n            // handle postgrest reserved characters\n            // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n            if (typeof s === 'string' && new RegExp('[,()]').test(s))\n                return `\"${s}\"`;\n            else\n                return `${s}`;\n        })\n            .join(',');\n        this.url.searchParams.append(`${column}`, `in.(${cleanedValues})`);\n        return this;\n    }\n    /**\n     * Finds all rows whose json, array, or range value on the stated `column`\n     * contains the values specified in `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    contains(column, value) {\n        if (typeof value === 'string') {\n            // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n            // keep it simple and accept a string\n            this.url.searchParams.append(`${column}`, `cs.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(`${column}`, `cs.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(`${column}`, `cs.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose json, array, or range value on the stated `column` is\n     * contained by the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    containedBy(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(`${column}`, `cd.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(`${column}`, `cd.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(`${column}`, `cd.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is strictly to the\n     * left of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeLt(column, range) {\n        this.url.searchParams.append(`${column}`, `sl.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is strictly to\n     * the right of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeGt(column, range) {\n        this.url.searchParams.append(`${column}`, `sr.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` does not extend\n     * to the left of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeGte(column, range) {\n        this.url.searchParams.append(`${column}`, `nxl.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` does not extend\n     * to the right of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeLte(column, range) {\n        this.url.searchParams.append(`${column}`, `nxr.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is adjacent to\n     * the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeAdjacent(column, range) {\n        this.url.searchParams.append(`${column}`, `adj.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose array or range value on the stated `column` overlaps\n     * (has a value in common) with the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    overlaps(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(`${column}`, `ov.${value}`);\n        }\n        else {\n            // array\n            this.url.searchParams.append(`${column}`, `ov.{${value.join(',')}}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose text or tsvector value on the stated `column` matches\n     * the tsquery in `query`.\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     * @param type  The type of tsquery conversion to use on `query`.\n     */\n    textSearch(column, query, { config, type = null, } = {}) {\n        let typePart = '';\n        if (type === 'plain') {\n            typePart = 'pl';\n        }\n        else if (type === 'phrase') {\n            typePart = 'ph';\n        }\n        else if (type === 'websearch') {\n            typePart = 'w';\n        }\n        const configPart = config === undefined ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `${typePart}fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * to_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` instead.\n     */\n    fts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * plainto_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'plain'` instead.\n     */\n    plfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `plfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * phraseto_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'phrase'` instead.\n     */\n    phfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `phfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * websearch_to_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'websearch'` instead.\n     */\n    wfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `wfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose `column` satisfies the filter.\n     *\n     * @param column  The column to filter on.\n     * @param operator  The operator to filter with.\n     * @param value  The value to filter with.\n     */\n    filter(column, operator, value) {\n        this.url.searchParams.append(`${column}`, `${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose columns match the specified `query` object.\n     *\n     * @param query  The object to filter with, with column names as keys mapped\n     *               to their filter values.\n     */\n    match(query) {\n        Object.keys(query).forEach((key) => {\n            this.url.searchParams.append(`${key}`, `eq.${query[key]}`);\n        });\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestFilterBuilder.js.map","import { PostgrestBuilder } from './types';\n/**\n * Post-filters (transforms)\n */\nexport default class PostgrestTransformBuilder extends PostgrestBuilder {\n    /**\n     * Performs vertical filtering with SELECT.\n     *\n     * @param columns  The columns to retrieve, separated by commas.\n     */\n    select(columns = '*') {\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = columns\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        return this;\n    }\n    /**\n     * Orders the result with the specified `column`.\n     *\n     * @param column  The column to order on.\n     * @param ascending  If `true`, the result will be in ascending order.\n     * @param nullsFirst  If `true`, `null`s appear first.\n     * @param foreignTable  The foreign table to use (if `column` is a foreign column).\n     */\n    order(column, { ascending = true, nullsFirst = false, foreignTable, } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'order' : `${foreignTable}.order`;\n        const existingOrder = this.url.searchParams.get(key);\n        this.url.searchParams.set(key, `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}.${nullsFirst ? 'nullsfirst' : 'nullslast'}`);\n        return this;\n    }\n    /**\n     * Limits the result with the specified `count`.\n     *\n     * @param count  The maximum no. of rows to limit to.\n     * @param foreignTable  The foreign table to use (for foreign columns).\n     */\n    limit(count, { foreignTable } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(key, `${count}`);\n        return this;\n    }\n    /**\n     * Limits the result to rows within the specified range, inclusive.\n     *\n     * @param from  The starting index from which to limit the result, inclusive.\n     * @param to  The last index to which to limit the result, inclusive.\n     * @param foreignTable  The foreign table to use (for foreign columns).\n     */\n    range(from, to, { foreignTable } = {}) {\n        const keyOffset = typeof foreignTable === 'undefined' ? 'offset' : `${foreignTable}.offset`;\n        const keyLimit = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(keyOffset, `${from}`);\n        // Range is inclusive, so add 1\n        this.url.searchParams.set(keyLimit, `${to - from + 1}`);\n        return this;\n    }\n    /**\n     * Sets the AbortSignal for the fetch request.\n     */\n    abortSignal(signal) {\n        this.signal = signal;\n        return this;\n    }\n    /**\n     * Retrieves only one row from the result. Result must be one row (e.g. using\n     * `limit`), otherwise this will result in an error.\n     */\n    single() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        return this;\n    }\n    /**\n     * Retrieves at most one row from the result. Result must be at most one row\n     * (e.g. using `eq` on a UNIQUE column), otherwise this will result in an\n     * error.\n     */\n    maybeSingle() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        const _this = new PostgrestTransformBuilder(this);\n        _this.then = ((onfulfilled, onrejected) => this.then((res) => {\n            var _a, _b;\n            if ((_b = (_a = res.error) === null || _a === void 0 ? void 0 : _a.details) === null || _b === void 0 ? void 0 : _b.includes('Results contain 0 rows')) {\n                return onfulfilled({\n                    error: null,\n                    data: null,\n                    count: res.count,\n                    status: 200,\n                    statusText: 'OK',\n                    body: null,\n                });\n            }\n            return onfulfilled(res);\n        }, onrejected));\n        return _this;\n    }\n    /**\n     * Set the response type to CSV.\n     */\n    csv() {\n        this.headers['Accept'] = 'text/csv';\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestTransformBuilder.js.map","import { PostgrestBuilder } from './types';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestQueryBuilder extends PostgrestBuilder {\n    constructor(url, { headers = {}, schema, fetch, } = {}) {\n        super({ fetch });\n        this.url = new URL(url);\n        this.headers = Object.assign({}, headers);\n        this.schema = schema;\n    }\n    /**\n     * Performs vertical filtering with SELECT.\n     *\n     * @param columns  The columns to retrieve, separated by commas.\n     * @param head  When set to true, select will void data.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    select(columns = '*', { head = false, count = null, } = {}) {\n        this.method = 'GET';\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = columns\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (count) {\n            this.headers['Prefer'] = `count=${count}`;\n        }\n        if (head) {\n            this.method = 'HEAD';\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n    insert(values, { upsert = false, onConflict, returning = 'representation', count = null, } = {}) {\n        this.method = 'POST';\n        const prefersHeaders = [`return=${returning}`];\n        if (upsert)\n            prefersHeaders.push('resolution=merge-duplicates');\n        if (upsert && onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs an UPSERT into the table.\n     *\n     * @param values  The values to insert.\n     * @param onConflict  By specifying the `on_conflict` query parameter, you can make UPSERT work on a column(s) that has a UNIQUE constraint.\n     * @param returning  By default the new record is returned. Set this to 'minimal' if you don't need this value.\n     * @param count  Count algorithm to use to count rows in a table.\n     * @param ignoreDuplicates  Specifies if duplicate rows should be ignored and not inserted.\n     */\n    upsert(values, { onConflict, returning = 'representation', count = null, ignoreDuplicates = false, } = {}) {\n        this.method = 'POST';\n        const prefersHeaders = [\n            `resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`,\n            `return=${returning}`,\n        ];\n        if (onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs an UPDATE on the table.\n     *\n     * @param values  The values to update.\n     * @param returning  By default the updated record is returned. Set this to 'minimal' if you don't need this value.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    update(values, { returning = 'representation', count = null, } = {}) {\n        this.method = 'PATCH';\n        const prefersHeaders = [`return=${returning}`];\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs a DELETE on the table.\n     *\n     * @param returning  If `true`, return the deleted row(s) in the response.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    delete({ returning = 'representation', count = null, } = {}) {\n        this.method = 'DELETE';\n        const prefersHeaders = [`return=${returning}`];\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n}\n//# sourceMappingURL=PostgrestQueryBuilder.js.map","import { PostgrestBuilder } from './types';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestRpcBuilder extends PostgrestBuilder {\n    constructor(url, { headers = {}, schema, fetch, } = {}) {\n        super({ fetch });\n        this.url = new URL(url);\n        this.headers = Object.assign({}, headers);\n        this.schema = schema;\n    }\n    /**\n     * Perform a function call.\n     */\n    rpc(params, { head = false, count = null, } = {}) {\n        if (head) {\n            this.method = 'HEAD';\n            if (params) {\n                Object.entries(params).forEach(([name, value]) => {\n                    this.url.searchParams.append(name, value);\n                });\n            }\n        }\n        else {\n            this.method = 'POST';\n            this.body = params;\n        }\n        if (count) {\n            if (this.headers['Prefer'] !== undefined)\n                this.headers['Prefer'] += `,count=${count}`;\n            else\n                this.headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n}\n//# sourceMappingURL=PostgrestRpcBuilder.js.map","/**\n * Helpers to convert the change Payload into native JS types.\n */\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\nexport var PostgresTypes;\n(function (PostgresTypes) {\n    PostgresTypes[\"abstime\"] = \"abstime\";\n    PostgresTypes[\"bool\"] = \"bool\";\n    PostgresTypes[\"date\"] = \"date\";\n    PostgresTypes[\"daterange\"] = \"daterange\";\n    PostgresTypes[\"float4\"] = \"float4\";\n    PostgresTypes[\"float8\"] = \"float8\";\n    PostgresTypes[\"int2\"] = \"int2\";\n    PostgresTypes[\"int4\"] = \"int4\";\n    PostgresTypes[\"int4range\"] = \"int4range\";\n    PostgresTypes[\"int8\"] = \"int8\";\n    PostgresTypes[\"int8range\"] = \"int8range\";\n    PostgresTypes[\"json\"] = \"json\";\n    PostgresTypes[\"jsonb\"] = \"jsonb\";\n    PostgresTypes[\"money\"] = \"money\";\n    PostgresTypes[\"numeric\"] = \"numeric\";\n    PostgresTypes[\"oid\"] = \"oid\";\n    PostgresTypes[\"reltime\"] = \"reltime\";\n    PostgresTypes[\"text\"] = \"text\";\n    PostgresTypes[\"time\"] = \"time\";\n    PostgresTypes[\"timestamp\"] = \"timestamp\";\n    PostgresTypes[\"timestamptz\"] = \"timestamptz\";\n    PostgresTypes[\"timetz\"] = \"timetz\";\n    PostgresTypes[\"tsrange\"] = \"tsrange\";\n    PostgresTypes[\"tstzrange\"] = \"tstzrange\";\n})(PostgresTypes || (PostgresTypes = {}));\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (columns, record, options = {}) => {\n    var _a;\n    const skipTypes = (_a = options.skipTypes) !== null && _a !== void 0 ? _a : [];\n    return Object.keys(record).reduce((acc, rec_key) => {\n        acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes);\n        return acc;\n    }, {});\n};\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (columnName, columns, record, skipTypes) => {\n    const column = columns.find((x) => x.name === columnName);\n    const colType = column === null || column === void 0 ? void 0 : column.type;\n    const value = record[columnName];\n    if (colType && !skipTypes.includes(colType)) {\n        return convertCell(colType, value);\n    }\n    return noop(value);\n};\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} stringValue The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type, value) => {\n    // if data type is an array\n    if (type.charAt(0) === '_') {\n        const dataType = type.slice(1, type.length);\n        return toArray(value, dataType);\n    }\n    // If not null, convert to correct type.\n    switch (type) {\n        case PostgresTypes.bool:\n            return toBoolean(value);\n        case PostgresTypes.float4:\n        case PostgresTypes.float8:\n        case PostgresTypes.int2:\n        case PostgresTypes.int4:\n        case PostgresTypes.int8:\n        case PostgresTypes.numeric:\n        case PostgresTypes.oid:\n            return toNumber(value);\n        case PostgresTypes.json:\n        case PostgresTypes.jsonb:\n            return toJson(value);\n        case PostgresTypes.timestamp:\n            return toTimestampString(value); // Format to be consistent with PostgREST\n        case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n        case PostgresTypes.date: // To allow users to cast it based on Timezone\n        case PostgresTypes.daterange:\n        case PostgresTypes.int4range:\n        case PostgresTypes.int8range:\n        case PostgresTypes.money:\n        case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n        case PostgresTypes.text:\n        case PostgresTypes.time: // To allow users to cast it based on Timezone\n        case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n        case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n        case PostgresTypes.tsrange:\n        case PostgresTypes.tstzrange:\n            return noop(value);\n        default:\n            // Return the value for remaining types\n            return noop(value);\n    }\n};\nconst noop = (value) => {\n    return value;\n};\nexport const toBoolean = (value) => {\n    switch (value) {\n        case 't':\n            return true;\n        case 'f':\n            return false;\n        default:\n            return value;\n    }\n};\nexport const toNumber = (value) => {\n    if (typeof value === 'string') {\n        const parsedValue = parseFloat(value);\n        if (!Number.isNaN(parsedValue)) {\n            return parsedValue;\n        }\n    }\n    return value;\n};\nexport const toJson = (value) => {\n    if (typeof value === 'string') {\n        try {\n            return JSON.parse(value);\n        }\n        catch (error) {\n            console.log(`JSON parse error: ${error}`);\n            return value;\n        }\n    }\n    return value;\n};\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nexport const toArray = (value, type) => {\n    if (typeof value !== 'string') {\n        return value;\n    }\n    const lastIdx = value.length - 1;\n    const closeBrace = value[lastIdx];\n    const openBrace = value[0];\n    // Confirm value is a Postgres array by checking curly brackets\n    if (openBrace === '{' && closeBrace === '}') {\n        let arr;\n        const valTrim = value.slice(1, lastIdx);\n        // TODO: find a better solution to separate Postgres array data\n        try {\n            arr = JSON.parse('[' + valTrim + ']');\n        }\n        catch (_) {\n            // WARNING: splitting on comma does not cover all edge cases\n            arr = valTrim ? valTrim.split(',') : [];\n        }\n        return arr.map((val) => convertCell(type, val));\n    }\n    return value;\n};\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (value) => {\n    if (typeof value === 'string') {\n        return value.replace(' ', 'T');\n    }\n    return value;\n};\n//# sourceMappingURL=transformers.js.map","import PostgrestQueryBuilder from './lib/PostgrestQueryBuilder';\nimport PostgrestRpcBuilder from './lib/PostgrestRpcBuilder';\nimport { DEFAULT_HEADERS } from './lib/constants';\nexport default class PostgrestClient {\n    /**\n     * Creates a PostgREST client.\n     *\n     * @param url  URL of the PostgREST endpoint.\n     * @param headers  Custom headers.\n     * @param schema  Postgres schema to switch to.\n     */\n    constructor(url, { headers = {}, schema, fetch, } = {}) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.schema = schema;\n        this.fetch = fetch;\n    }\n    /**\n     * Authenticates the request with JWT.\n     *\n     * @param token  The JWT token to use.\n     */\n    auth(token) {\n        this.headers['Authorization'] = `Bearer ${token}`;\n        return this;\n    }\n    /**\n     * Perform a table operation.\n     *\n     * @param table  The table name to operate on.\n     */\n    from(table) {\n        const url = `${this.url}/${table}`;\n        return new PostgrestQueryBuilder(url, {\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn  The function name to call.\n     * @param params  The parameters to pass to the function call.\n     * @param head  When set to true, no data will be returned.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    rpc(fn, params, { head = false, count = null, } = {}) {\n        const url = `${this.url}/rpc/${fn}`;\n        return new PostgrestRpcBuilder(url, {\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n        }).rpc(params, { head, count });\n    }\n}\n//# sourceMappingURL=PostgrestClient.js.map","/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n    constructor(callback, timerCalc) {\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n        this.timer = undefined;\n        this.tries = 0;\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n    }\n    reset() {\n        this.tries = 0;\n        clearTimeout(this.timer);\n    }\n    // Cancels any previous scheduleTimeout and schedules callback\n    scheduleTimeout() {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n            this.tries = this.tries + 1;\n            this.callback();\n        }, this.timerCalc(this.tries + 1));\n    }\n}\n//# sourceMappingURL=timer.js.map","import { DEFAULT_TIMEOUT } from '../lib/constants';\nexport default class Push {\n    /**\n     * Initializes the Push\n     *\n     * @param channel The Channel\n     * @param event The event, for example `\"phx_join\"`\n     * @param payload The payload, for example `{user_id: 123}`\n     * @param timeout The push timeout in milliseconds\n     */\n    constructor(channel, event, payload = {}, timeout = DEFAULT_TIMEOUT) {\n        this.channel = channel;\n        this.event = event;\n        this.payload = payload;\n        this.timeout = timeout;\n        this.sent = false;\n        this.timeoutTimer = undefined;\n        this.ref = '';\n        this.receivedResp = null;\n        this.recHooks = [];\n        this.refEvent = null;\n    }\n    resend(timeout) {\n        this.timeout = timeout;\n        this._cancelRefEvent();\n        this.ref = '';\n        this.refEvent = null;\n        this.receivedResp = null;\n        this.sent = false;\n        this.send();\n    }\n    send() {\n        if (this._hasReceived('timeout')) {\n            return;\n        }\n        this.startTimeout();\n        this.sent = true;\n        this.channel.socket.push({\n            topic: this.channel.topic,\n            event: this.event,\n            payload: this.payload,\n            ref: this.ref,\n        });\n    }\n    updatePayload(payload) {\n        this.payload = Object.assign(Object.assign({}, this.payload), payload);\n    }\n    receive(status, callback) {\n        var _a;\n        if (this._hasReceived(status)) {\n            callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\n        }\n        this.recHooks.push({ status, callback });\n        return this;\n    }\n    startTimeout() {\n        if (this.timeoutTimer) {\n            return;\n        }\n        this.ref = this.channel.socket.makeRef();\n        this.refEvent = this.channel.replyEventName(this.ref);\n        this.channel.on(this.refEvent, (payload) => {\n            this._cancelRefEvent();\n            this._cancelTimeout();\n            this.receivedResp = payload;\n            this._matchReceive(payload);\n        });\n        this.timeoutTimer = setTimeout(() => {\n            this.trigger('timeout', {});\n        }, this.timeout);\n    }\n    trigger(status, response) {\n        if (this.refEvent)\n            this.channel.trigger(this.refEvent, { status, response });\n    }\n    destroy() {\n        this._cancelRefEvent();\n        this._cancelTimeout();\n    }\n    _cancelRefEvent() {\n        if (!this.refEvent) {\n            return;\n        }\n        this.channel.off(this.refEvent);\n    }\n    _cancelTimeout() {\n        clearTimeout(this.timeoutTimer);\n        this.timeoutTimer = undefined;\n    }\n    _matchReceive({ status, response, }) {\n        this.recHooks\n            .filter((h) => h.status === status)\n            .forEach((h) => h.callback(response));\n    }\n    _hasReceived(status) {\n        return this.receivedResp && this.receivedResp.status === status;\n    }\n}\n//# sourceMappingURL=push.js.map","import { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants';\nimport Push from './lib/push';\nimport Timer from './lib/timer';\nexport default class RealtimeSubscription {\n    constructor(topic, params = {}, socket) {\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = [];\n        this.state = CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.timeout = this.socket.timeout;\n        this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new Timer(() => this.rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive('ok', () => {\n            this.state = CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this.onClose(() => {\n            this.rejoinTimer.reset();\n            this.socket.log('channel', `close ${this.topic} ${this.joinRef()}`);\n            this.state = CHANNEL_STATES.closed;\n            this.socket.remove(this);\n        });\n        this.onError((reason) => {\n            if (this.isLeaving() || this.isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('timeout', () => {\n            if (!this.isJoining()) {\n                return;\n            }\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\n            this.trigger(this.replyEventName(ref), payload);\n        });\n    }\n    rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this.rejoin();\n        }\n    }\n    subscribe(timeout = this.timeout) {\n        if (this.joinedOnce) {\n            throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;\n        }\n        else {\n            this.joinedOnce = true;\n            this.rejoin(timeout);\n            return this.joinPush;\n        }\n    }\n    onClose(callback) {\n        this.on(CHANNEL_EVENTS.close, callback);\n    }\n    onError(callback) {\n        this.on(CHANNEL_EVENTS.error, (reason) => callback(reason));\n    }\n    on(event, callback) {\n        this.bindings.push({ event, callback });\n    }\n    off(event) {\n        this.bindings = this.bindings.filter((bind) => bind.event !== event);\n    }\n    canPush() {\n        return this.socket.isConnected() && this.isJoined();\n    }\n    push(event, payload, timeout = this.timeout) {\n        if (!this.joinedOnce) {\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\n        }\n        let pushEvent = new Push(this, event, payload, timeout);\n        if (this.canPush()) {\n            pushEvent.send();\n        }\n        else {\n            pushEvent.startTimeout();\n            this.pushBuffer.push(pushEvent);\n        }\n        return pushEvent;\n    }\n    updateJoinPayload(payload) {\n        this.joinPush.updatePayload(payload);\n    }\n    /**\n     * Leaves the channel\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n    unsubscribe(timeout = this.timeout) {\n        this.state = CHANNEL_STATES.leaving;\n        let onClose = () => {\n            this.socket.log('channel', `leave ${this.topic}`);\n            this.trigger(CHANNEL_EVENTS.close, 'leave', this.joinRef());\n        };\n        // Destroy joinPush to avoid connection timeouts during unscription phase\n        this.joinPush.destroy();\n        let leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n        leavePush.receive('ok', () => onClose()).receive('timeout', () => onClose());\n        leavePush.send();\n        if (!this.canPush()) {\n            leavePush.trigger('ok', {});\n        }\n        return leavePush;\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     */\n    onMessage(event, payload, ref) {\n        return payload;\n    }\n    isMember(topic) {\n        return this.topic === topic;\n    }\n    joinRef() {\n        return this.joinPush.ref;\n    }\n    rejoin(timeout = this.timeout) {\n        if (this.isLeaving()) {\n            return;\n        }\n        this.socket.leaveOpenTopic(this.topic);\n        this.state = CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    trigger(event, payload, ref) {\n        let { close, error, leave, join } = CHANNEL_EVENTS;\n        let events = [close, error, leave, join];\n        if (ref && events.indexOf(event) >= 0 && ref !== this.joinRef()) {\n            return;\n        }\n        let handledPayload = this.onMessage(event, payload, ref);\n        if (payload && !handledPayload) {\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n        }\n        this.bindings\n            .filter((bind) => {\n            // Bind all events if the user specifies a wildcard.\n            if (bind.event === '*') {\n                return event === (payload === null || payload === void 0 ? void 0 : payload.type);\n            }\n            else {\n                return bind.event === event;\n            }\n        })\n            .map((bind) => bind.callback(handledPayload, ref));\n    }\n    replyEventName(ref) {\n        return `chan_reply_${ref}`;\n    }\n    isClosed() {\n        return this.state === CHANNEL_STATES.closed;\n    }\n    isErrored() {\n        return this.state === CHANNEL_STATES.errored;\n    }\n    isJoined() {\n        return this.state === CHANNEL_STATES.joined;\n    }\n    isJoining() {\n        return this.state === CHANNEL_STATES.joining;\n    }\n    isLeaving() {\n        return this.state === CHANNEL_STATES.leaving;\n    }\n}\n//# sourceMappingURL=RealtimeSubscription.js.map","// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\nexport default class Serializer {\n    constructor() {\n        this.HEADER_LENGTH = 1;\n    }\n    decode(rawPayload, callback) {\n        if (rawPayload.constructor === ArrayBuffer) {\n            return callback(this._binaryDecode(rawPayload));\n        }\n        if (typeof rawPayload === 'string') {\n            return callback(JSON.parse(rawPayload));\n        }\n        return callback({});\n    }\n    _binaryDecode(buffer) {\n        const view = new DataView(buffer);\n        const decoder = new TextDecoder();\n        return this._decodeBroadcast(buffer, view, decoder);\n    }\n    _decodeBroadcast(buffer, view, decoder) {\n        const topicSize = view.getUint8(1);\n        const eventSize = view.getUint8(2);\n        let offset = this.HEADER_LENGTH + 2;\n        const topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n        offset = offset + topicSize;\n        const event = decoder.decode(buffer.slice(offset, offset + eventSize));\n        offset = offset + eventSize;\n        const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));\n        return { ref: null, topic: topic, event: event, payload: data };\n    }\n}\n//# sourceMappingURL=serializer.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { VSN, CHANNEL_EVENTS, TRANSPORTS, SOCKET_STATES, DEFAULT_TIMEOUT, WS_CLOSE_NORMAL, DEFAULT_HEADERS, } from './lib/constants';\nimport Timer from './lib/timer';\nimport RealtimeSubscription from './RealtimeSubscription';\nimport { w3cwebsocket as WebSocket } from 'websocket';\nimport Serializer from './lib/serializer';\nconst noop = () => { };\nexport default class RealtimeClient {\n    /**\n     * Initializes the Socket\n     *\n     * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n     * @param options.transport The Websocket Transport, for example WebSocket.\n     * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n     * @param options.params The optional params to pass when connecting.\n     * @param options.headers The optional headers to pass when connecting.\n     * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n     * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n     * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n     * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n     * @param options.longpollerTimeout The maximum timeout of a long poll AJAX request. Defaults to 20s (double the server long poll timer).\n     * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n     */\n    constructor(endPoint, options) {\n        this.accessToken = null;\n        this.channels = [];\n        this.endPoint = '';\n        this.headers = DEFAULT_HEADERS;\n        this.params = {};\n        this.timeout = DEFAULT_TIMEOUT;\n        this.transport = WebSocket;\n        this.heartbeatIntervalMs = 30000;\n        this.longpollerTimeout = 20000;\n        this.heartbeatTimer = undefined;\n        this.pendingHeartbeatRef = null;\n        this.ref = 0;\n        this.logger = noop;\n        this.conn = null;\n        this.sendBuffer = [];\n        this.serializer = new Serializer();\n        this.stateChangeCallbacks = {\n            open: [],\n            close: [],\n            error: [],\n            message: [],\n        };\n        this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`;\n        if (options === null || options === void 0 ? void 0 : options.params)\n            this.params = options.params;\n        if (options === null || options === void 0 ? void 0 : options.headers)\n            this.headers = Object.assign(Object.assign({}, this.headers), options.headers);\n        if (options === null || options === void 0 ? void 0 : options.timeout)\n            this.timeout = options.timeout;\n        if (options === null || options === void 0 ? void 0 : options.logger)\n            this.logger = options.logger;\n        if (options === null || options === void 0 ? void 0 : options.transport)\n            this.transport = options.transport;\n        if (options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs)\n            this.heartbeatIntervalMs = options.heartbeatIntervalMs;\n        if (options === null || options === void 0 ? void 0 : options.longpollerTimeout)\n            this.longpollerTimeout = options.longpollerTimeout;\n        this.reconnectAfterMs = (options === null || options === void 0 ? void 0 : options.reconnectAfterMs)\n            ? options.reconnectAfterMs\n            : (tries) => {\n                return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n            };\n        this.encode = (options === null || options === void 0 ? void 0 : options.encode)\n            ? options.encode\n            : (payload, callback) => {\n                return callback(JSON.stringify(payload));\n            };\n        this.decode = (options === null || options === void 0 ? void 0 : options.decode)\n            ? options.decode\n            : this.serializer.decode.bind(this.serializer);\n        this.reconnectTimer = new Timer(() => __awaiter(this, void 0, void 0, function* () {\n            yield this.disconnect();\n            this.connect();\n        }), this.reconnectAfterMs);\n    }\n    /**\n     * Connects the socket.\n     */\n    connect() {\n        if (this.conn) {\n            return;\n        }\n        this.conn = new this.transport(this.endPointURL(), [], null, this.headers);\n        if (this.conn) {\n            // this.conn.timeout = this.longpollerTimeout // TYPE ERROR\n            this.conn.binaryType = 'arraybuffer';\n            this.conn.onopen = () => this._onConnOpen();\n            this.conn.onerror = (error) => this._onConnError(error);\n            this.conn.onmessage = (event) => this.onConnMessage(event);\n            this.conn.onclose = (event) => this._onConnClose(event);\n        }\n    }\n    /**\n     * Disconnects the socket.\n     *\n     * @param code A numeric status code to send on disconnect.\n     * @param reason A custom reason for the disconnect.\n     */\n    disconnect(code, reason) {\n        return new Promise((resolve, _reject) => {\n            try {\n                if (this.conn) {\n                    this.conn.onclose = function () { }; // noop\n                    if (code) {\n                        this.conn.close(code, reason || '');\n                    }\n                    else {\n                        this.conn.close();\n                    }\n                    this.conn = null;\n                    // remove open handles\n                    this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n                    this.reconnectTimer.reset();\n                }\n                resolve({ error: null, data: true });\n            }\n            catch (error) {\n                resolve({ error: error, data: false });\n            }\n        });\n    }\n    /**\n     * Logs the message. Override `this.logger` for specialized logging.\n     */\n    log(kind, msg, data) {\n        this.logger(kind, msg, data);\n    }\n    /**\n     * Registers a callback for connection state change event.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen(() => console.log(\"Socket opened.\"))\n     */\n    onOpen(callback) {\n        this.stateChangeCallbacks.open.push(callback);\n    }\n    /**\n     * Registers a callbacks for connection state change events.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen(() => console.log(\"Socket closed.\"))\n     */\n    onClose(callback) {\n        this.stateChangeCallbacks.close.push(callback);\n    }\n    /**\n     * Registers a callback for connection state change events.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen((error) => console.log(\"An error occurred\"))\n     */\n    onError(callback) {\n        this.stateChangeCallbacks.error.push(callback);\n    }\n    /**\n     * Calls a function any time a message is received.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onMessage((message) => console.log(message))\n     */\n    onMessage(callback) {\n        this.stateChangeCallbacks.message.push(callback);\n    }\n    /**\n     * Returns the current state of the socket.\n     */\n    connectionState() {\n        switch (this.conn && this.conn.readyState) {\n            case SOCKET_STATES.connecting:\n                return 'connecting';\n            case SOCKET_STATES.open:\n                return 'open';\n            case SOCKET_STATES.closing:\n                return 'closing';\n            default:\n                return 'closed';\n        }\n    }\n    /**\n     * Retuns `true` is the connection is open.\n     */\n    isConnected() {\n        return this.connectionState() === 'open';\n    }\n    /**\n     * Removes a subscription from the socket.\n     *\n     * @param channel An open subscription.\n     */\n    remove(channel) {\n        this.channels = this.channels.filter((c) => c.joinRef() !== channel.joinRef());\n    }\n    channel(topic, chanParams = {}) {\n        let chan = new RealtimeSubscription(topic, chanParams, this);\n        this.channels.push(chan);\n        return chan;\n    }\n    push(data) {\n        let { topic, event, payload, ref } = data;\n        let callback = () => {\n            this.encode(data, (result) => {\n                var _a;\n                (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);\n            });\n        };\n        this.log('push', `${topic} ${event} (${ref})`, payload);\n        if (this.isConnected()) {\n            callback();\n        }\n        else {\n            this.sendBuffer.push(callback);\n        }\n    }\n    onConnMessage(rawMessage) {\n        this.decode(rawMessage.data, (msg) => {\n            let { topic, event, payload, ref } = msg;\n            if (ref && ref === this.pendingHeartbeatRef) {\n                this.pendingHeartbeatRef = null;\n            }\n            else if (event === (payload === null || payload === void 0 ? void 0 : payload.type)) {\n                this._resetHeartbeat();\n            }\n            this.log('receive', `${payload.status || ''} ${topic} ${event} ${(ref && '(' + ref + ')') || ''}`, payload);\n            this.channels\n                .filter((channel) => channel.isMember(topic))\n                .forEach((channel) => channel.trigger(event, payload, ref));\n            this.stateChangeCallbacks.message.forEach((callback) => callback(msg));\n        });\n    }\n    /**\n     * Returns the URL of the websocket.\n     */\n    endPointURL() {\n        return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: VSN }));\n    }\n    /**\n     * Return the next message ref, accounting for overflows\n     */\n    makeRef() {\n        let newRef = this.ref + 1;\n        if (newRef === this.ref) {\n            this.ref = 0;\n        }\n        else {\n            this.ref = newRef;\n        }\n        return this.ref.toString();\n    }\n    /**\n     * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n     *\n     * @param token A JWT string.\n     */\n    setAuth(token) {\n        this.accessToken = token;\n        try {\n            this.channels.forEach((channel) => {\n                token && channel.updateJoinPayload({ user_token: token });\n                if (channel.joinedOnce && channel.isJoined()) {\n                    channel.push(CHANNEL_EVENTS.access_token, { access_token: token });\n                }\n            });\n        }\n        catch (error) {\n            console.log('setAuth error', error);\n        }\n    }\n    leaveOpenTopic(topic) {\n        let dupChannel = this.channels.find((c) => c.topic === topic && (c.isJoined() || c.isJoining()));\n        if (dupChannel) {\n            this.log('transport', `leaving duplicate topic \"${topic}\"`);\n            dupChannel.unsubscribe();\n        }\n    }\n    _onConnOpen() {\n        this.log('transport', `connected to ${this.endPointURL()}`);\n        this._flushSendBuffer();\n        this.reconnectTimer.reset();\n        this._resetHeartbeat();\n        this.stateChangeCallbacks.open.forEach((callback) => callback());\n    }\n    _onConnClose(event) {\n        this.log('transport', 'close', event);\n        this._triggerChanError();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.reconnectTimer.scheduleTimeout();\n        this.stateChangeCallbacks.close.forEach((callback) => callback(event));\n    }\n    _onConnError(error) {\n        this.log('transport', error.message);\n        this._triggerChanError();\n        this.stateChangeCallbacks.error.forEach((callback) => callback(error));\n    }\n    _triggerChanError() {\n        this.channels.forEach((channel) => channel.trigger(CHANNEL_EVENTS.error));\n    }\n    _appendParams(url, params) {\n        if (Object.keys(params).length === 0) {\n            return url;\n        }\n        const prefix = url.match(/\\?/) ? '&' : '?';\n        const query = new URLSearchParams(params);\n        return `${url}${prefix}${query}`;\n    }\n    _flushSendBuffer() {\n        if (this.isConnected() && this.sendBuffer.length > 0) {\n            this.sendBuffer.forEach((callback) => callback());\n            this.sendBuffer = [];\n        }\n    }\n    _resetHeartbeat() {\n        this.pendingHeartbeatRef = null;\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(() => this._sendHeartbeat(), this.heartbeatIntervalMs);\n    }\n    _sendHeartbeat() {\n        var _a;\n        if (!this.isConnected()) {\n            return;\n        }\n        if (this.pendingHeartbeatRef) {\n            this.pendingHeartbeatRef = null;\n            this.log('transport', 'heartbeat timeout. Attempting to re-establish connection');\n            (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(WS_CLOSE_NORMAL, 'hearbeat timeout');\n            return;\n        }\n        this.pendingHeartbeatRef = this.makeRef();\n        this.push({\n            topic: 'phoenix',\n            event: 'heartbeat',\n            payload: {},\n            ref: this.pendingHeartbeatRef,\n        });\n        this.setAuth(this.accessToken);\n    }\n}\n//# sourceMappingURL=RealtimeClient.js.map","import { Transformers } from '@supabase/realtime-js';\nexport class SupabaseRealtimeClient {\n    constructor(socket, headers, schema, tableName) {\n        const chanParams = {};\n        const topic = tableName === '*' ? `realtime:${schema}` : `realtime:${schema}:${tableName}`;\n        const userToken = headers['Authorization'].split(' ')[1];\n        if (userToken) {\n            chanParams['user_token'] = userToken;\n        }\n        this.subscription = socket.channel(topic, chanParams);\n    }\n    getPayloadRecords(payload) {\n        const records = {\n            new: {},\n            old: {},\n        };\n        if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n            records.new = Transformers.convertChangeData(payload.columns, payload.record);\n        }\n        if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n            records.old = Transformers.convertChangeData(payload.columns, payload.old_record);\n        }\n        return records;\n    }\n    /**\n     * The event you want to listen to.\n     *\n     * @param event The event\n     * @param callback A callback function that is called whenever the event occurs.\n     */\n    on(event, callback) {\n        this.subscription.on(event, (payload) => {\n            let enrichedPayload = {\n                schema: payload.schema,\n                table: payload.table,\n                commit_timestamp: payload.commit_timestamp,\n                eventType: payload.type,\n                new: {},\n                old: {},\n                errors: payload.errors,\n            };\n            enrichedPayload = Object.assign(Object.assign({}, enrichedPayload), this.getPayloadRecords(payload));\n            callback(enrichedPayload);\n        });\n        return this;\n    }\n    /**\n     * Enables the subscription.\n     */\n    subscribe(callback = () => { }) {\n        this.subscription.onError((e) => callback('SUBSCRIPTION_ERROR', e));\n        this.subscription.onClose(() => callback('CLOSED'));\n        this.subscription\n            .subscribe()\n            .receive('ok', () => callback('SUBSCRIBED'))\n            .receive('error', (e) => callback('SUBSCRIPTION_ERROR', e))\n            .receive('timeout', () => callback('RETRYING_AFTER_TIMEOUT'));\n        return this.subscription;\n    }\n}\n//# sourceMappingURL=SupabaseRealtimeClient.js.map","import { PostgrestQueryBuilder } from '@supabase/postgrest-js';\nimport { SupabaseRealtimeClient } from './SupabaseRealtimeClient';\nexport class SupabaseQueryBuilder extends PostgrestQueryBuilder {\n    constructor(url, { headers = {}, schema, realtime, table, fetch, }) {\n        super(url, { headers, schema, fetch });\n        this._subscription = null;\n        this._realtime = realtime;\n        this._headers = headers;\n        this._schema = schema;\n        this._table = table;\n    }\n    /**\n     * Subscribe to realtime changes in your database.\n     * @param event The database event which you would like to receive updates for, or you can use the special wildcard `*` to listen to all changes.\n     * @param callback A callback that will handle the payload that is sent whenever your database changes.\n     */\n    on(event, callback) {\n        if (!this._realtime.isConnected()) {\n            this._realtime.connect();\n        }\n        if (!this._subscription) {\n            this._subscription = new SupabaseRealtimeClient(this._realtime, this._headers, this._schema, this._table);\n        }\n        return this._subscription.on(event, callback);\n    }\n}\n//# sourceMappingURL=SupabaseQueryBuilder.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { get, post, remove } from './fetch';\nimport fetch from 'cross-fetch';\nconst DEFAULT_SEARCH_OPTIONS = {\n    limit: 100,\n    offset: 0,\n    sortBy: {\n        column: 'name',\n        order: 'asc',\n    },\n};\nconst DEFAULT_FILE_OPTIONS = {\n    cacheControl: '3600',\n    contentType: 'text/plain;charset=UTF-8',\n    upsert: false,\n};\nexport class StorageFileApi {\n    constructor(url, headers = {}, bucketId, fetch) {\n        this.url = url;\n        this.headers = headers;\n        this.bucketId = bucketId;\n        this.fetch = fetch;\n    }\n    /**\n     * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\n     *\n     * @param method HTTP method.\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     * @param fileOptions HTTP headers.\n     * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n     * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n     * `upsert`: boolean, whether to perform an upsert.\n     */\n    uploadOrUpdate(method, path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let body;\n                const options = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);\n                const headers = Object.assign(Object.assign({}, this.headers), (method === 'POST' && { 'x-upsert': String(options.upsert) }));\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append('cacheControl', options.cacheControl);\n                    body.append('', fileBody);\n                }\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append('cacheControl', options.cacheControl);\n                }\n                else {\n                    body = fileBody;\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\n                    headers['content-type'] = options.contentType;\n                }\n                const cleanPath = this._removeEmptyFolders(path);\n                const _path = this._getFinalPath(cleanPath);\n                const res = yield fetch(`${this.url}/object/${_path}`, {\n                    method,\n                    body: body,\n                    headers,\n                });\n                if (res.ok) {\n                    // const data = await res.json()\n                    // temporary fix till backend is updated to the latest storage-api version\n                    return { data: { Key: _path }, error: null };\n                }\n                else {\n                    const error = yield res.json();\n                    return { data: null, error };\n                }\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Uploads a file to an existing bucket.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     * @param fileOptions HTTP headers.\n     * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n     * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n     * `upsert`: boolean, whether to perform an upsert.\n     */\n    upload(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('POST', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Replaces an existing file at the specified path with a new one.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     * @param fileOptions HTTP headers.\n     * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n     * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n     * `upsert`: boolean, whether to perform an upsert.\n     */\n    update(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('PUT', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Moves an existing file, optionally renaming it at the same time.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n     */\n    move(fromPath, toPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/move`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Create signed url to download file without requiring permissions. This URL can be valid for a set number of seconds.\n     *\n     * @param path The file path to be downloaded, including the current file name. For example `folder/image.png`.\n     * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n     */\n    createSignedUrl(path, expiresIn) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const _path = this._getFinalPath(path);\n                let data = yield post(this.fetch, `${this.url}/object/sign/${_path}`, { expiresIn }, { headers: this.headers });\n                const signedURL = `${this.url}${data.signedURL}`;\n                data = { signedURL };\n                return { data, error: null, signedURL };\n            }\n            catch (error) {\n                return { data: null, error, signedURL: null };\n            }\n        });\n    }\n    /**\n     * Downloads a file.\n     *\n     * @param path The file path to be downloaded, including the path and file name. For example `folder/image.png`.\n     */\n    download(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const _path = this._getFinalPath(path);\n                const res = yield get(this.fetch, `${this.url}/object/${_path}`, {\n                    headers: this.headers,\n                    noResolveJson: true,\n                });\n                const data = yield res.blob();\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Retrieve URLs for assets in public buckets\n     *\n     * @param path The file path to be downloaded, including the path and file name. For example `folder/image.png`.\n     */\n    getPublicUrl(path) {\n        try {\n            const _path = this._getFinalPath(path);\n            const publicURL = `${this.url}/object/public/${_path}`;\n            const data = { publicURL };\n            return { data, error: null, publicURL };\n        }\n        catch (error) {\n            return { data: null, error, publicURL: null };\n        }\n    }\n    /**\n     * Deletes files within the same bucket\n     *\n     * @param paths An array of files to be deleted, including the path and file name. For example [`folder/image.png`].\n     */\n    remove(paths) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/object/${this.bucketId}`, { prefixes: paths }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Get file metadata\n     * @param id the file id to retrieve metadata\n     */\n    // async getMetadata(id: string): Promise<{ data: Metadata | null; error: Error | null }> {\n    //   try {\n    //     const data = await get(`${this.url}/metadata/${id}`, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     return { data: null, error }\n    //   }\n    // }\n    /**\n     * Update file metadata\n     * @param id the file id to update metadata\n     * @param meta the new file metadata\n     */\n    // async updateMetadata(\n    //   id: string,\n    //   meta: Metadata\n    // ): Promise<{ data: Metadata | null; error: Error | null }> {\n    //   try {\n    //     const data = await post(`${this.url}/metadata/${id}`, { ...meta }, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     return { data: null, error }\n    //   }\n    // }\n    /**\n     * Lists all the files within a bucket.\n     * @param path The folder path.\n     * @param options Search options, including `limit`, `offset`, and `sortBy`.\n     * @param parameters Fetch parameters, currently only supports `signal`, which is an AbortController's signal\n     */\n    list(path, options, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const body = Object.assign(Object.assign(Object.assign({}, DEFAULT_SEARCH_OPTIONS), options), { prefix: path || '' });\n                const data = yield post(this.fetch, `${this.url}/object/list/${this.bucketId}`, body, { headers: this.headers }, parameters);\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    _getFinalPath(path) {\n        return `${this.bucketId}/${path}`;\n    }\n    _removeEmptyFolders(path) {\n        return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/');\n    }\n}\n//# sourceMappingURL=StorageFileApi.js.map","import { StorageBucketApi, StorageFileApi } from './lib';\nexport class SupabaseStorageClient extends StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        super(url, headers, fetch);\n    }\n    /**\n     * Perform file operation in a bucket.\n     *\n     * @param id The bucket id to operate on.\n     */\n    from(id) {\n        return new StorageFileApi(this.url, this.headers, id, this.fetch);\n    }\n}\n//# sourceMappingURL=SupabaseStorageClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { get, post, put, remove } from './fetch';\nimport { DEFAULT_HEADERS } from './constants';\nexport class StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.fetch = fetch;\n    }\n    /**\n     * Retrieves the details of all Storage buckets within an existing product.\n     */\n    listBuckets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing Storage bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to retrieve.\n     */\n    getBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Creates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     * @returns newly created bucket id\n     */\n    createBucket(id, options = { public: false }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket`, { id, name: id, public: options.public }, { headers: this.headers });\n                return { data: data.name, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Updates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     */\n    updateBucket(id, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(this.fetch, `${this.url}/bucket/${id}`, { id, name: id, public: options.public }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Removes all objects inside a single bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to empty.\n     */\n    emptyBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket/${id}/empty`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n     * You must first `empty()` the bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to delete.\n     */\n    deleteBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/bucket/${id}`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n}\n//# sourceMappingURL=StorageBucketApi.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_HEADERS, STORAGE_KEY } from './lib/constants';\nimport { stripTrailingSlash, isBrowser } from './lib/helpers';\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient';\nimport { SupabaseQueryBuilder } from './lib/SupabaseQueryBuilder';\nimport { SupabaseStorageClient } from '@supabase/storage-js';\nimport { PostgrestClient } from '@supabase/postgrest-js';\nimport { RealtimeClient } from '@supabase/realtime-js';\nconst DEFAULT_OPTIONS = {\n    schema: 'public',\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    multiTab: true,\n    headers: DEFAULT_HEADERS,\n};\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.headers Any additional headers to send with each network request.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.multiTab Set to \"false\" if you want to disable multi-tab/window events.\n     * @param options.fetch A custom fetch implementation.\n     */\n    constructor(supabaseUrl, supabaseKey, options) {\n        this.supabaseUrl = supabaseUrl;\n        this.supabaseKey = supabaseKey;\n        if (!supabaseUrl)\n            throw new Error('supabaseUrl is required.');\n        if (!supabaseKey)\n            throw new Error('supabaseKey is required.');\n        const _supabaseUrl = stripTrailingSlash(supabaseUrl);\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.restUrl = `${_supabaseUrl}/rest/v1`;\n        this.realtimeUrl = `${_supabaseUrl}/realtime/v1`.replace('http', 'ws');\n        this.authUrl = `${_supabaseUrl}/auth/v1`;\n        this.storageUrl = `${_supabaseUrl}/storage/v1`;\n        this.schema = settings.schema;\n        this.multiTab = settings.multiTab;\n        this.fetch = settings.fetch;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), options === null || options === void 0 ? void 0 : options.headers);\n        this.auth = this._initSupabaseAuthClient(settings);\n        this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers }, settings.realtime));\n        this._listenForAuthEvents();\n        this._listenForMultiTabEvents();\n        // In the future we might allow the user to pass in a logger to receive these events.\n        // this.realtime.onOpen(() => console.log('OPEN'))\n        // this.realtime.onClose(() => console.log('CLOSED'))\n        // this.realtime.onError((e: Error) => console.log('Socket error', e))\n    }\n    /**\n     * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n     */\n    get storage() {\n        return new SupabaseStorageClient(this.storageUrl, this._getAuthHeaders(), this.fetch);\n    }\n    /**\n     * Perform a table operation.\n     *\n     * @param table The table name to operate on.\n     */\n    from(table) {\n        const url = `${this.restUrl}/${table}`;\n        return new SupabaseQueryBuilder(url, {\n            headers: this._getAuthHeaders(),\n            schema: this.schema,\n            realtime: this.realtime,\n            table,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn  The function name to call.\n     * @param params  The parameters to pass to the function call.\n     * @param head   When set to true, no data will be returned.\n     * @param count  Count algorithm to use to count rows in a table.\n     *\n     */\n    rpc(fn, params, { head = false, count = null, } = {}) {\n        const rest = this._initPostgRESTClient();\n        return rest.rpc(fn, params, { head, count });\n    }\n    /**\n     * Remove all subscriptions.\n     */\n    removeAllSubscriptions() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const subs = this.realtime.channels.slice();\n            const removeSubPromises = subs.map((sub) => this.removeSubscription(sub)\n                .then(() => ({\n                status: 'fulfilled',\n                value: { error: null },\n            }))\n                .catch((reason) => ({\n                status: 'rejected',\n                reason,\n            })));\n            return Promise.all(removeSubPromises);\n        });\n    }\n    /**\n     * Removes an active subscription and returns the number of open connections.\n     *\n     * @param subscription The subscription you want to remove.\n     */\n    removeSubscription(subscription) {\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n            const { error } = yield this._closeSubscription(subscription);\n            if (error) {\n                return reject({ error });\n            }\n            const allSubscriptions = this.getSubscriptions();\n            if (allSubscriptions.length === 0) {\n                const { error } = yield this.realtime.disconnect();\n                if (error) {\n                    return reject({ error });\n                }\n            }\n            const openSubscriptionsCount = allSubscriptions.filter((chan) => chan.isJoined()).length;\n            return resolve({\n                data: { openSubscriptions: openSubscriptionsCount },\n                error: null,\n            });\n        }));\n    }\n    _closeSubscription(subscription) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!subscription.isClosed()) {\n                return yield this._closeChannel(subscription);\n            }\n            return new Promise((resolve) => {\n                this.realtime.remove(subscription);\n                return resolve({ error: null });\n            });\n        });\n    }\n    /**\n     * Returns an array of all your subscriptions.\n     */\n    getSubscriptions() {\n        return this.realtime.channels;\n    }\n    _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, localStorage, headers, fetch, }) {\n        const authHeaders = {\n            Authorization: `Bearer ${this.supabaseKey}`,\n            apikey: `${this.supabaseKey}`,\n        };\n        return new SupabaseAuthClient({\n            url: this.authUrl,\n            headers: Object.assign(Object.assign({}, headers), authHeaders),\n            autoRefreshToken,\n            persistSession,\n            detectSessionInUrl,\n            localStorage,\n            fetch,\n        });\n    }\n    _initRealtimeClient(options) {\n        return new RealtimeClient(this.realtimeUrl, Object.assign(Object.assign({}, options), { params: Object.assign(Object.assign({}, options === null || options === void 0 ? void 0 : options.params), { apikey: this.supabaseKey }) }));\n    }\n    _initPostgRESTClient() {\n        return new PostgrestClient(this.restUrl, {\n            headers: this._getAuthHeaders(),\n            schema: this.schema,\n            fetch: this.fetch,\n        });\n    }\n    _getAuthHeaders() {\n        var _a, _b;\n        const headers = this.headers;\n        const authBearer = (_b = (_a = this.auth.session()) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : this.supabaseKey;\n        headers['apikey'] = this.supabaseKey;\n        headers['Authorization'] = `Bearer ${authBearer}`;\n        return headers;\n    }\n    _closeChannel(subscription) {\n        return new Promise((resolve, reject) => {\n            subscription\n                .unsubscribe()\n                .receive('ok', () => resolve({ error: null }))\n                .receive('error', (error) => reject({ error }))\n                .receive('timeout', () => reject({ error: 'timed out' }));\n        });\n    }\n    _listenForMultiTabEvents() {\n        if (!this.multiTab || !isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            return null;\n        }\n        try {\n            return window === null || window === void 0 ? void 0 : window.addEventListener('storage', (e) => {\n                var _a, _b, _c;\n                if (e.key === STORAGE_KEY) {\n                    const newSession = JSON.parse(String(e.newValue));\n                    const accessToken = (_b = (_a = newSession === null || newSession === void 0 ? void 0 : newSession.currentSession) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined;\n                    const previousAccessToken = (_c = this.auth.session()) === null || _c === void 0 ? void 0 : _c.access_token;\n                    if (!accessToken) {\n                        this._handleTokenChanged('SIGNED_OUT', accessToken, 'STORAGE');\n                    }\n                    else if (!previousAccessToken && accessToken) {\n                        this._handleTokenChanged('SIGNED_IN', accessToken, 'STORAGE');\n                    }\n                    else if (previousAccessToken !== accessToken) {\n                        this._handleTokenChanged('TOKEN_REFRESHED', accessToken, 'STORAGE');\n                    }\n                }\n            });\n        }\n        catch (error) {\n            console.error('_listenForMultiTabEvents', error);\n            return null;\n        }\n    }\n    _listenForAuthEvents() {\n        let { data } = this.auth.onAuthStateChange((event, session) => {\n            this._handleTokenChanged(event, session === null || session === void 0 ? void 0 : session.access_token, 'CLIENT');\n        });\n        return data;\n    }\n    _handleTokenChanged(event, token, source) {\n        if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n            this.changedAccessToken !== token) {\n            // Token has changed\n            this.realtime.setAuth(token);\n            // Ideally we should call this.auth.recoverSession() - need to make public\n            // to trigger a \"SIGNED_IN\" event on this client.\n            if (source == 'STORAGE')\n                this.auth.setAuth(token);\n            this.changedAccessToken = token;\n        }\n        else if (event === 'SIGNED_OUT' || event === 'USER_DELETED') {\n            // Token is removed\n            this.removeAllSubscriptions();\n            if (source == 'STORAGE')\n                this.auth.signOut();\n        }\n    }\n}\n//# sourceMappingURL=SupabaseClient.js.map","import { createClient } from '@supabase/supabase-js'\nconst supabase = createClient(process.env.BUCKET, process.env.API_KEY)\n\nexport async function upload(image) {\n  return supabase\n    .storage\n    .from('i')\n    .upload(`${image.name}_${new Date().getTime()}`, image, {\n      returning: 'minimal'\n    })\n}\n\nexport function get_url(path) {\n  const { publicURL } =  supabase\n    .storage\n    .from('i')\n    .getPublicUrl(path)\n  return publicURL.replace('/i/i/', '/i/')\n}\n","import SupabaseClient from './SupabaseClient';\nexport * from '@supabase/gotrue-js';\nexport * from '@supabase/realtime-js';\n/**\n * Creates a new Supabase Client.\n */\nconst createClient = (supabaseUrl, supabaseKey, options) => {\n    return new SupabaseClient(supabaseUrl, supabaseKey, options);\n};\nexport { createClient, SupabaseClient, };\n//# sourceMappingURL=index.js.map","import { useRef } from 'preact/hooks'\nimport style from './style.css'\nimport image from '../../assets/image.svg'\nimport { upload } from '../../api/image'\n\nexport default function Uploader({dispatch}) {\n  const div = useRef(null)\n  function dropHandler(ev) {\n    ev.preventDefault()\n    ev.stopPropagation()\n    const files = ev?.dataTransfer?.files || ev.target.files\n    const file_to_upload = files[0]\n    dispatch({type: 'uploading'})\n    upload(file_to_upload)\n      .then(res => {\n        dispatch({type: 'success', image: file_to_upload, url: res.data.Key})\n      })\n  }\n\n  return <>\n    <h2>Upload your image</h2>\n    <p>File should be jpeg, png...</p>\n    <div ref={div} id={style.file}\n      onDragOver={(ev) => { ev.preventDefault(); ev.stopPropagation() }}\n      onDrop={dropHandler}\n    >\n      <img src={image} alt='' />\n      <p>Drag and Drop your image here</p>\n    </div>\n    <p>or</p>\n    <label id={style.upload}>Choose a file<input type='file' accept='image/*' onChange={dropHandler} /></label>\n  </>\n}\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require(\"preact\");","export default __webpack_public_path__ + \"3710b8a35e7e317216bf76a9c717b30a.svg\";","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\thooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\n\t\tafterPaint(afterPaintEffects.push(c));\n\t}\n\tcurrentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') ref(createHandle());\n\t\t\telse if (ref) ref.current = createHandle();\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","import { h } from 'preact';\nimport { useReducer } from 'preact/hooks'\nimport Wrapper from './wrapper'\nimport Uploader from './uploader'\nimport Loader from './loader'\nimport Success from './success'\n\nconst reducer = (state, action) => {\n\tswitch(action.type) {\n\t\tcase 'upload':\n\t\t\treturn {...state, pos: 0}\n\t\tcase 'uploading':\n\t\t\treturn {...state, pos: 1}\n\t\tcase 'success':\n\t\t\treturn {...state, pos: 2, img: URL.createObjectURL(action.image), url: action.url}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nconst App = () => {\n\tconst [state, setState] = useReducer(reducer, {pos: 0, img: '', url: ''});\n\treturn <div id=\"app\">\n\t\t\t<Wrapper dispatch={setState} state={state}>\n\t\t\t{\n\t\t\t\tstate.pos == 0 ? <Uploader />\n\t\t\t\t: (state.pos == 1 ? <Loader /> : <Success />)\n\t\t\t}\n\t\t\t</Wrapper>\n\t\t</div>\n}\n\nexport default App;\n","import './style';\nimport App from './components/app';\n\nexport default App;\n","import style from './style.css'\n\nexport default function Loader() {\n  return <>\n    <h2>Uploading...</h2>\n    <div className={style.outer}>\n      <div className={style.inner} />\n    </div>\n  </>\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"file\":\"file__ysAO2\",\"upload\":\"upload__qXrox\"};","import { useState, useEffect } from 'preact/hooks'\nimport style from './style.css'\nimport { get_url } from '../../api/image'\n\nexport default function Success({state, dispatch}) {\n  const [copied, setCopied] = useState(false)\n\n  useEffect(() => {\n    if (copied) {\n      setTimeout(() => {\n        setCopied(false)\n      }, 2000)\n    }\n  }, [copied])\n  const url = get_url(state.url)\n\n  return <>\n    <span className={style.checkmark} children='&#10003;' />\n    <h2 children='Uploaded successfully!' />\n    <img src={state.img} alt='' className={style.img} />\n    <div className={style.copy_box}>\n      <p>{url}</p>\n      <button onClick={() => {\n        navigator.clipboard.writeText(url)\n        setCopied(true)\n      }} className={copied && style.copied} children={copied ? 'Copied' : 'Copy link'} />\n    </div>\n    <button className={style.button} children='Upload another' onClick={() => dispatch({type: 'upload'})} />\n  </>\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"card__A0hIy\"};"],"sourceRoot":""}